// Code generated by protoc-gen-go.
// source: message.proto
// DO NOT EDIT!

/*
Package voice is a generated protocol buffer package.

It is generated from these files:
	message.proto

It has these top-level messages:
	Handshake
	HandshakeAck
	CreateGroup
	AddPlayer
	AddPlayerAck
	RemovePlayer
	DestroyGroup
	AdjustPlayerAttr
	Request
	Response
	Message
*/
package voice

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type MSG int32

const (
	MSG_PKT_NONE               MSG = 0
	MSG_PKT_HANDSHAKE          MSG = 1
	MSG_PKT_HANDSHAKE_ACK      MSG = 2
	MSG_PKT_CREATE_GROUP       MSG = 3
	MSG_PKT_ADD_PLAYER         MSG = 4
	MSG_PKT_ADD_PLAYER_ACK     MSG = 5
	MSG_PKT_REMOVE_PLAYER      MSG = 6
	MSG_PKT_DESTROY_GROUP      MSG = 7
	MSG_PKT_ADJUST_PLAYER_ATTR MSG = 8
	MSG_PKT_ADJUST_GROUP_ATTR  MSG = 9
)

var MSG_name = map[int32]string{
	0: "PKT_NONE",
	1: "PKT_HANDSHAKE",
	2: "PKT_HANDSHAKE_ACK",
	3: "PKT_CREATE_GROUP",
	4: "PKT_ADD_PLAYER",
	5: "PKT_ADD_PLAYER_ACK",
	6: "PKT_REMOVE_PLAYER",
	7: "PKT_DESTROY_GROUP",
	8: "PKT_ADJUST_PLAYER_ATTR",
	9: "PKT_ADJUST_GROUP_ATTR",
}
var MSG_value = map[string]int32{
	"PKT_NONE":               0,
	"PKT_HANDSHAKE":          1,
	"PKT_HANDSHAKE_ACK":      2,
	"PKT_CREATE_GROUP":       3,
	"PKT_ADD_PLAYER":         4,
	"PKT_ADD_PLAYER_ACK":     5,
	"PKT_REMOVE_PLAYER":      6,
	"PKT_DESTROY_GROUP":      7,
	"PKT_ADJUST_PLAYER_ATTR": 8,
	"PKT_ADJUST_GROUP_ATTR":  9,
}

func (x MSG) Enum() *MSG {
	p := new(MSG)
	*p = x
	return p
}
func (x MSG) String() string {
	return proto.EnumName(MSG_name, int32(x))
}
func (x *MSG) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MSG_value, data, "MSG")
	if err != nil {
		return err
	}
	*x = MSG(value)
	return nil
}
func (MSG) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ACK int32

const (
	ACK_ACK_OK                ACK = 0
	ACK_ACK_HANDSHAKE_FAILED  ACK = 1
	ACK_ACK_ADD_PLAYER_FAILED ACK = 2
)

var ACK_name = map[int32]string{
	0: "ACK_OK",
	1: "ACK_HANDSHAKE_FAILED",
	2: "ACK_ADD_PLAYER_FAILED",
}
var ACK_value = map[string]int32{
	"ACK_OK":                0,
	"ACK_HANDSHAKE_FAILED":  1,
	"ACK_ADD_PLAYER_FAILED": 2,
}

func (x ACK) Enum() *ACK {
	p := new(ACK)
	*p = x
	return p
}
func (x ACK) String() string {
	return proto.EnumName(ACK_name, int32(x))
}
func (x *ACK) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ACK_value, data, "ACK")
	if err != nil {
		return err
	}
	*x = ACK(value)
	return nil
}
func (ACK) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Handshake struct {
	ProductKey       *string `protobuf:"bytes,1,opt,name=ProductKey,json=productKey" json:"ProductKey,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Handshake) Reset()                    { *m = Handshake{} }
func (m *Handshake) String() string            { return proto.CompactTextString(m) }
func (*Handshake) ProtoMessage()               {}
func (*Handshake) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Handshake) GetProductKey() string {
	if m != nil && m.ProductKey != nil {
		return *m.ProductKey
	}
	return ""
}

type HandshakeAck struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *HandshakeAck) Reset()                    { *m = HandshakeAck{} }
func (m *HandshakeAck) String() string            { return proto.CompactTextString(m) }
func (*HandshakeAck) ProtoMessage()               {}
func (*HandshakeAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type CreateGroup struct {
	GroupId          *uint64 `protobuf:"varint,1,opt,name=groupId" json:"groupId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CreateGroup) Reset()                    { *m = CreateGroup{} }
func (m *CreateGroup) String() string            { return proto.CompactTextString(m) }
func (*CreateGroup) ProtoMessage()               {}
func (*CreateGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateGroup) GetGroupId() uint64 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

type AddPlayer struct {
	GroupId          *uint64 `protobuf:"varint,1,opt,name=groupId" json:"groupId,omitempty"`
	PlayerId         *uint64 `protobuf:"varint,2,opt,name=playerId" json:"playerId,omitempty"`
	CanSpeak         *uint32 `protobuf:"varint,3,opt,name=canSpeak" json:"canSpeak,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AddPlayer) Reset()                    { *m = AddPlayer{} }
func (m *AddPlayer) String() string            { return proto.CompactTextString(m) }
func (*AddPlayer) ProtoMessage()               {}
func (*AddPlayer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AddPlayer) GetGroupId() uint64 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *AddPlayer) GetPlayerId() uint64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *AddPlayer) GetCanSpeak() uint32 {
	if m != nil && m.CanSpeak != nil {
		return *m.CanSpeak
	}
	return 0
}

type AddPlayerAck struct {
	GroupId          *uint64 `protobuf:"varint,1,opt,name=groupId" json:"groupId,omitempty"`
	PlayerId         *uint64 `protobuf:"varint,2,opt,name=playerId" json:"playerId,omitempty"`
	PlayerIndex      *uint32 `protobuf:"varint,3,opt,name=playerIndex" json:"playerIndex,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AddPlayerAck) Reset()                    { *m = AddPlayerAck{} }
func (m *AddPlayerAck) String() string            { return proto.CompactTextString(m) }
func (*AddPlayerAck) ProtoMessage()               {}
func (*AddPlayerAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AddPlayerAck) GetGroupId() uint64 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *AddPlayerAck) GetPlayerId() uint64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *AddPlayerAck) GetPlayerIndex() uint32 {
	if m != nil && m.PlayerIndex != nil {
		return *m.PlayerIndex
	}
	return 0
}

type RemovePlayer struct {
	GroupId          *uint64 `protobuf:"varint,1,opt,name=groupId" json:"groupId,omitempty"`
	PlayerId         *uint64 `protobuf:"varint,2,opt,name=playerId" json:"playerId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RemovePlayer) Reset()                    { *m = RemovePlayer{} }
func (m *RemovePlayer) String() string            { return proto.CompactTextString(m) }
func (*RemovePlayer) ProtoMessage()               {}
func (*RemovePlayer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RemovePlayer) GetGroupId() uint64 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *RemovePlayer) GetPlayerId() uint64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type DestroyGroup struct {
	GroupId          *uint64 `protobuf:"varint,1,opt,name=groupId" json:"groupId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DestroyGroup) Reset()                    { *m = DestroyGroup{} }
func (m *DestroyGroup) String() string            { return proto.CompactTextString(m) }
func (*DestroyGroup) ProtoMessage()               {}
func (*DestroyGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DestroyGroup) GetGroupId() uint64 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

type AdjustPlayerAttr struct {
	PlayerId         *uint64 `protobuf:"varint,1,opt,name=playerId" json:"playerId,omitempty"`
	CanSpeak         *uint32 `protobuf:"varint,2,opt,name=canSpeak" json:"canSpeak,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AdjustPlayerAttr) Reset()                    { *m = AdjustPlayerAttr{} }
func (m *AdjustPlayerAttr) String() string            { return proto.CompactTextString(m) }
func (*AdjustPlayerAttr) ProtoMessage()               {}
func (*AdjustPlayerAttr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AdjustPlayerAttr) GetPlayerId() uint64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *AdjustPlayerAttr) GetCanSpeak() uint32 {
	if m != nil && m.CanSpeak != nil {
		return *m.CanSpeak
	}
	return 0
}

type Request struct {
	Handshake        *Handshake        `protobuf:"bytes,1,opt,name=handshake" json:"handshake,omitempty"`
	CreateGroup      *CreateGroup      `protobuf:"bytes,2,opt,name=createGroup" json:"createGroup,omitempty"`
	AddPlayer        *AddPlayer        `protobuf:"bytes,3,opt,name=addPlayer" json:"addPlayer,omitempty"`
	RemovePlayer     *RemovePlayer     `protobuf:"bytes,4,opt,name=removePlayer" json:"removePlayer,omitempty"`
	DestroyGropu     *DestroyGroup     `protobuf:"bytes,5,opt,name=destroyGropu" json:"destroyGropu,omitempty"`
	AdjustPlayerAttr *AdjustPlayerAttr `protobuf:"bytes,6,opt,name=adjustPlayerAttr" json:"adjustPlayerAttr,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Request) GetHandshake() *Handshake {
	if m != nil {
		return m.Handshake
	}
	return nil
}

func (m *Request) GetCreateGroup() *CreateGroup {
	if m != nil {
		return m.CreateGroup
	}
	return nil
}

func (m *Request) GetAddPlayer() *AddPlayer {
	if m != nil {
		return m.AddPlayer
	}
	return nil
}

func (m *Request) GetRemovePlayer() *RemovePlayer {
	if m != nil {
		return m.RemovePlayer
	}
	return nil
}

func (m *Request) GetDestroyGropu() *DestroyGroup {
	if m != nil {
		return m.DestroyGropu
	}
	return nil
}

func (m *Request) GetAdjustPlayerAttr() *AdjustPlayerAttr {
	if m != nil {
		return m.AdjustPlayerAttr
	}
	return nil
}

type Response struct {
	Code             *ACK          `protobuf:"varint,1,opt,name=Code,json=code,enum=voice.ACK" json:"Code,omitempty"`
	ErrMsg           *string       `protobuf:"bytes,2,opt,name=ErrMsg,json=errMsg" json:"ErrMsg,omitempty"`
	HandshakeAck     *HandshakeAck `protobuf:"bytes,3,opt,name=handshakeAck" json:"handshakeAck,omitempty"`
	AddPlayerAck     *AddPlayerAck `protobuf:"bytes,4,opt,name=addPlayerAck" json:"addPlayerAck,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Response) GetCode() ACK {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ACK_ACK_OK
}

func (m *Response) GetErrMsg() string {
	if m != nil && m.ErrMsg != nil {
		return *m.ErrMsg
	}
	return ""
}

func (m *Response) GetHandshakeAck() *HandshakeAck {
	if m != nil {
		return m.HandshakeAck
	}
	return nil
}

func (m *Response) GetAddPlayerAck() *AddPlayerAck {
	if m != nil {
		return m.AddPlayerAck
	}
	return nil
}

type Message struct {
	MessageId        *MSG      `protobuf:"varint,1,opt,name=messageId,enum=voice.MSG" json:"messageId,omitempty"`
	MessageLen       *int32    `protobuf:"varint,2,opt,name=messageLen" json:"messageLen,omitempty"`
	Request          *Request  `protobuf:"bytes,3,opt,name=request" json:"request,omitempty"`
	Response         *Response `protobuf:"bytes,4,opt,name=response" json:"response,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Message) GetMessageId() MSG {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return MSG_PKT_NONE
}

func (m *Message) GetMessageLen() int32 {
	if m != nil && m.MessageLen != nil {
		return *m.MessageLen
	}
	return 0
}

func (m *Message) GetRequest() *Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *Message) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func init() {
	proto.RegisterType((*Handshake)(nil), "voice.Handshake")
	proto.RegisterType((*HandshakeAck)(nil), "voice.HandshakeAck")
	proto.RegisterType((*CreateGroup)(nil), "voice.CreateGroup")
	proto.RegisterType((*AddPlayer)(nil), "voice.AddPlayer")
	proto.RegisterType((*AddPlayerAck)(nil), "voice.AddPlayerAck")
	proto.RegisterType((*RemovePlayer)(nil), "voice.RemovePlayer")
	proto.RegisterType((*DestroyGroup)(nil), "voice.DestroyGroup")
	proto.RegisterType((*AdjustPlayerAttr)(nil), "voice.AdjustPlayerAttr")
	proto.RegisterType((*Request)(nil), "voice.Request")
	proto.RegisterType((*Response)(nil), "voice.Response")
	proto.RegisterType((*Message)(nil), "voice.Message")
	proto.RegisterEnum("voice.MSG", MSG_name, MSG_value)
	proto.RegisterEnum("voice.ACK", ACK_name, ACK_value)
}

var fileDescriptor0 = []byte{
	// 653 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x54, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xf9, 0xf7, 0x24, 0x0d, 0xee, 0xf6, 0x07, 0xc3, 0x01, 0x55, 0xbe, 0x50, 0xb5, 0x52,
	0x0e, 0x15, 0x12, 0x67, 0x2b, 0x76, 0xff, 0xd2, 0x34, 0xd1, 0x24, 0x45, 0xea, 0x01, 0x45, 0x56,
	0xbc, 0xb4, 0x50, 0x1a, 0x1b, 0xdb, 0xa9, 0xe8, 0x2b, 0x71, 0xe6, 0x59, 0x78, 0x02, 0x1e, 0x84,
	0xdd, 0xcd, 0x7a, 0xbd, 0x0e, 0x02, 0x24, 0x38, 0xd9, 0x3b, 0xdf, 0x37, 0xdf, 0xce, 0x7c, 0xb3,
	0xbb, 0xb0, 0x71, 0x4f, 0xd3, 0x34, 0xb8, 0xa1, 0xbd, 0x38, 0x89, 0xb2, 0x88, 0xd4, 0x1f, 0xa2,
	0x0f, 0x73, 0xea, 0x1c, 0x82, 0x79, 0x1a, 0x2c, 0xc2, 0xf4, 0x36, 0xb8, 0xa3, 0xe4, 0x25, 0xc0,
	0x38, 0x89, 0xc2, 0xe5, 0x3c, 0x1b, 0xd0, 0x47, 0xdb, 0xd8, 0x33, 0xf6, 0x4d, 0x84, 0x58, 0x45,
	0x9c, 0x2e, 0x74, 0x14, 0xd9, 0x9d, 0xdf, 0x39, 0xaf, 0xa0, 0xdd, 0x4f, 0x68, 0x90, 0xd1, 0x93,
	0x24, 0x5a, 0xc6, 0xc4, 0x86, 0xe6, 0x0d, 0xff, 0x39, 0x0b, 0x45, 0x6e, 0x0d, 0xf3, 0xa5, 0xf3,
	0x0e, 0x4c, 0x37, 0x0c, 0xc7, 0x9f, 0x82, 0x47, 0x9a, 0xfc, 0x9e, 0x46, 0x5e, 0x40, 0x2b, 0x16,
	0x1c, 0x06, 0x55, 0x04, 0xa4, 0xd6, 0x1c, 0x9b, 0x07, 0x8b, 0x49, 0x4c, 0x83, 0x3b, 0xbb, 0xca,
	0xb0, 0x0d, 0x54, 0x6b, 0xe7, 0x3d, 0x74, 0x94, 0x3c, 0xab, 0xeb, 0x1f, 0x77, 0xd8, 0x83, 0xb6,
	0xfc, 0x5f, 0x84, 0xf4, 0x8b, 0xdc, 0x44, 0x0f, 0x39, 0x1e, 0x74, 0x90, 0xde, 0x47, 0x0f, 0xf4,
	0x7f, 0x3a, 0x71, 0xf6, 0xa1, 0xe3, 0xd1, 0x34, 0x4b, 0xa2, 0xc7, 0xbf, 0xd9, 0x76, 0x0e, 0x96,
	0x1b, 0x7e, 0x5c, 0xa6, 0x99, 0x6c, 0x2d, 0xcb, 0x92, 0x92, 0xb2, 0xf1, 0x07, 0x8f, 0x2a, 0x6b,
	0x1e, 0x7d, 0xaf, 0x40, 0x13, 0xe9, 0xe7, 0x25, 0xdb, 0x99, 0xf4, 0xc0, 0xbc, 0xcd, 0xe7, 0x28,
	0x44, 0xda, 0x47, 0x56, 0x4f, 0x9c, 0x87, 0x9e, 0x9a, 0x2f, 0x16, 0x14, 0xf2, 0x1a, 0xda, 0xf3,
	0x62, 0xce, 0x42, 0xba, 0x7d, 0x44, 0x64, 0x86, 0x76, 0x02, 0x50, 0xa7, 0xf1, 0x5d, 0x82, 0x7c,
	0x2a, 0xc2, 0xcd, 0x62, 0x17, 0x35, 0x2d, 0x2c, 0x28, 0xe4, 0x0d, 0x74, 0x12, 0xcd, 0x5d, 0xbb,
	0x26, 0x52, 0xb6, 0x64, 0x8a, 0x6e, 0x3c, 0x96, 0x88, 0x3c, 0x31, 0x54, 0x86, 0xc6, 0x4b, 0xbb,
	0x5e, 0x4a, 0xd4, 0xbd, 0xc6, 0x12, 0x91, 0xf4, 0xc1, 0x0a, 0xd6, 0xfc, 0xb5, 0x1b, 0x22, 0xf9,
	0x99, 0x2a, 0xb4, 0x0c, 0xe3, 0x2f, 0x09, 0xce, 0x37, 0x03, 0x5a, 0x48, 0xd3, 0x38, 0x5a, 0xa4,
	0xfc, 0x06, 0xd5, 0xfa, 0x51, 0xb8, 0x32, 0xb5, 0x7b, 0x04, 0xb9, 0x4a, 0x7f, 0x80, 0xb5, 0x39,
	0x8b, 0x93, 0x5d, 0x68, 0xf8, 0x49, 0x32, 0x4c, 0x6f, 0x84, 0x89, 0x26, 0x36, 0xa8, 0x58, 0xf1,
	0x16, 0x6e, 0xb5, 0x9b, 0x25, 0xed, 0xda, 0x5a, 0x1f, 0x0a, 0x83, 0xb0, 0x44, 0xe4, 0x89, 0x81,
	0x76, 0xf4, 0xd7, 0x4c, 0xd3, 0x6f, 0x05, 0x96, 0x88, 0xce, 0x57, 0x03, 0x9a, 0xc3, 0xd5, 0x8b,
	0x40, 0xf6, 0xc1, 0x94, 0x8f, 0x83, 0x3c, 0x54, 0x45, 0xe9, 0xc3, 0xc9, 0x09, 0x16, 0x20, 0x7f,
	0x21, 0xe4, 0xe2, 0x82, 0x2e, 0x44, 0x0f, 0x75, 0xd4, 0x22, 0x4c, 0xa9, 0x99, 0xac, 0x0e, 0x99,
	0x6c, 0xa1, 0xab, 0xc6, 0x27, 0xa2, 0x98, 0xc3, 0xe4, 0x10, 0x5a, 0x89, 0x74, 0x4d, 0x16, 0xfd,
	0x54, 0x51, 0x57, 0x61, 0x54, 0x84, 0x83, 0x1f, 0x06, 0x54, 0x59, 0x25, 0xa4, 0x03, 0xad, 0xf1,
	0x60, 0x3a, 0xbb, 0x1c, 0x5d, 0xfa, 0xd6, 0x13, 0xb2, 0x09, 0x1b, 0x7c, 0x75, 0xea, 0x5e, 0x7a,
	0x93, 0x53, 0x77, 0xe0, 0x5b, 0x06, 0xd9, 0x81, 0xcd, 0x52, 0x68, 0xc6, 0xac, 0xb7, 0x2a, 0x64,
	0x1b, 0x2c, 0x1e, 0xee, 0xa3, 0xef, 0x4e, 0xfd, 0xd9, 0x09, 0x8e, 0xae, 0xc6, 0x56, 0x95, 0x10,
	0xe8, 0xf2, 0xa8, 0xeb, 0x79, 0xb3, 0xf1, 0x85, 0x7b, 0xed, 0xa3, 0x55, 0x63, 0x03, 0x22, 0xe5,
	0x98, 0x50, 0xa8, 0xe7, 0xc2, 0xe8, 0x0f, 0x47, 0x6f, 0xfd, 0x9c, 0xde, 0xc8, 0xc3, 0x9e, 0x3f,
	0x99, 0xe2, 0xe8, 0x5a, 0x2a, 0x37, 0xd9, 0x45, 0xdc, 0x5d, 0xa9, 0x9c, 0x5f, 0x4d, 0xa6, 0x4a,
	0x68, 0x3a, 0x45, 0xab, 0x45, 0x9e, 0xc3, 0x8e, 0x86, 0x89, 0x8c, 0x15, 0x64, 0x1e, 0x1c, 0x43,
	0x95, 0xed, 0x46, 0x00, 0x1a, 0xec, 0x33, 0x1b, 0x0d, 0x58, 0x8f, 0x36, 0x6c, 0xf3, 0xff, 0xa2,
	0xa1, 0x63, 0xf7, 0xec, 0xc2, 0xf7, 0x58, 0xab, 0x4c, 0x87, 0x23, 0x5a, 0xa5, 0x12, 0xaa, 0xfc,
	0x0c, 0x00, 0x00, 0xff, 0xff, 0x22, 0x6c, 0x53, 0x7d, 0xeb, 0x05, 0x00, 0x00,
}
