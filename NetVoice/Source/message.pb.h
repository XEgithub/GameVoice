// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_message_2eproto();
void protobuf_AssignDesc_message_2eproto();
void protobuf_ShutdownFile_message_2eproto();

class AdjustPlayerAttr;
class ControlMessage;
class EnterGroup;
class EnterGroupAck;
class Handshake;
class HandshakeAck;
class LeaveGroup;
class Noitfy;
class NotifyEnterGroup;
class NotifyLeaveGroup;
class PlayerRequestConnect;
class PlayerRequestConnectAck;
class Request;
class Response;
class VoiceData;
class VoiceHeartbeat;
class VoiceMessage;

enum MSG_CONST {
  CONST_VALUE = 0,
  MAX_PACKET_SIZE = 1024,
  MAX_VOICE_PACKET_SIZE = 1024,
  MSG_CONST_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MSG_CONST_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MSG_CONST_IsValid(int value);
const MSG_CONST MSG_CONST_MIN = CONST_VALUE;
const MSG_CONST MSG_CONST_MAX = MAX_PACKET_SIZE;
const int MSG_CONST_ARRAYSIZE = MSG_CONST_MAX + 1;

const ::google::protobuf::EnumDescriptor* MSG_CONST_descriptor();
inline const ::std::string& MSG_CONST_Name(MSG_CONST value) {
  return ::google::protobuf::internal::NameOfEnum(
    MSG_CONST_descriptor(), value);
}
inline bool MSG_CONST_Parse(
    const ::std::string& name, MSG_CONST* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MSG_CONST>(
    MSG_CONST_descriptor(), name, value);
}
enum MSG {
  NONE = 0,
  HANDSHAKE = 1,
  HANDSHAKE_ACK = 2,
  ENTER_GROUP = 3,
  ENTER_GROUP_ACK = 4,
  NOTIFY_ENTER_GROUP = 5,
  NOTIFY_LEAVE_GROUP = 6,
  LEAVE_GROUP = 7,
  ADJUST_PLAYER_ATTR = 8,
  ADJUST_GROUP_ATTR = 9,
  MSG_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MSG_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MSG_IsValid(int value);
const MSG MSG_MIN = NONE;
const MSG MSG_MAX = ADJUST_GROUP_ATTR;
const int MSG_ARRAYSIZE = MSG_MAX + 1;

const ::google::protobuf::EnumDescriptor* MSG_descriptor();
inline const ::std::string& MSG_Name(MSG value) {
  return ::google::protobuf::internal::NameOfEnum(
    MSG_descriptor(), value);
}
inline bool MSG_Parse(
    const ::std::string& name, MSG* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MSG>(
    MSG_descriptor(), name, value);
}
enum ACK {
  OK = 0,
  HANDSHAKE_FAILED = 1,
  ADD_PLAYER_FAILED = 2,
  ACK_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ACK_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ACK_IsValid(int value);
const ACK ACK_MIN = OK;
const ACK ACK_MAX = ADD_PLAYER_FAILED;
const int ACK_ARRAYSIZE = ACK_MAX + 1;

const ::google::protobuf::EnumDescriptor* ACK_descriptor();
inline const ::std::string& ACK_Name(ACK value) {
  return ::google::protobuf::internal::NameOfEnum(
    ACK_descriptor(), value);
}
inline bool ACK_Parse(
    const ::std::string& name, ACK* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ACK>(
    ACK_descriptor(), name, value);
}
enum VOICE_MSG {
  VOICE_MSG_NONE = 0,
  REQEUST_CONNECT = 1,
  REQEUST_CONNECT_ACK = 2,
  VOICE_DATA = 3,
  VOICE_HEARTBEAT = 4,
  VOICE_MSG_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VOICE_MSG_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VOICE_MSG_IsValid(int value);
const VOICE_MSG VOICE_MSG_MIN = VOICE_MSG_NONE;
const VOICE_MSG VOICE_MSG_MAX = VOICE_HEARTBEAT;
const int VOICE_MSG_ARRAYSIZE = VOICE_MSG_MAX + 1;

const ::google::protobuf::EnumDescriptor* VOICE_MSG_descriptor();
inline const ::std::string& VOICE_MSG_Name(VOICE_MSG value) {
  return ::google::protobuf::internal::NameOfEnum(
    VOICE_MSG_descriptor(), value);
}
inline bool VOICE_MSG_Parse(
    const ::std::string& name, VOICE_MSG* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VOICE_MSG>(
    VOICE_MSG_descriptor(), name, value);
}
enum VOICE_ACK {
  VOICE_OK = 0,
  VOICE_ACK_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VOICE_ACK_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VOICE_ACK_IsValid(int value);
const VOICE_ACK VOICE_ACK_MIN = VOICE_OK;
const VOICE_ACK VOICE_ACK_MAX = VOICE_OK;
const int VOICE_ACK_ARRAYSIZE = VOICE_ACK_MAX + 1;

const ::google::protobuf::EnumDescriptor* VOICE_ACK_descriptor();
inline const ::std::string& VOICE_ACK_Name(VOICE_ACK value) {
  return ::google::protobuf::internal::NameOfEnum(
    VOICE_ACK_descriptor(), value);
}
inline bool VOICE_ACK_Parse(
    const ::std::string& name, VOICE_ACK* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VOICE_ACK>(
    VOICE_ACK_descriptor(), name, value);
}
// ===================================================================

class Handshake : public ::google::protobuf::Message {
 public:
  Handshake();
  virtual ~Handshake();

  Handshake(const Handshake& from);

  inline Handshake& operator=(const Handshake& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Handshake& default_instance();

  void Swap(Handshake* other);

  // implements Message ----------------------------------------------

  inline Handshake* New() const { return New(NULL); }

  Handshake* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Handshake& from);
  void MergeFrom(const Handshake& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Handshake* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ProductKey = 2;
  void clear_productkey();
  static const int kProductKeyFieldNumber = 2;
  const ::std::string& productkey() const;
  void set_productkey(const ::std::string& value);
  void set_productkey(const char* value);
  void set_productkey(const char* value, size_t size);
  ::std::string* mutable_productkey();
  ::std::string* release_productkey();
  void set_allocated_productkey(::std::string* productkey);

  // @@protoc_insertion_point(class_scope:message.Handshake)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr productkey_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static Handshake* default_instance_;
};
// -------------------------------------------------------------------

class HandshakeAck : public ::google::protobuf::Message {
 public:
  HandshakeAck();
  virtual ~HandshakeAck();

  HandshakeAck(const HandshakeAck& from);

  inline HandshakeAck& operator=(const HandshakeAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HandshakeAck& default_instance();

  void Swap(HandshakeAck* other);

  // implements Message ----------------------------------------------

  inline HandshakeAck* New() const { return New(NULL); }

  HandshakeAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HandshakeAck& from);
  void MergeFrom(const HandshakeAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HandshakeAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:message.HandshakeAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static HandshakeAck* default_instance_;
};
// -------------------------------------------------------------------

class EnterGroup : public ::google::protobuf::Message {
 public:
  EnterGroup();
  virtual ~EnterGroup();

  EnterGroup(const EnterGroup& from);

  inline EnterGroup& operator=(const EnterGroup& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterGroup& default_instance();

  void Swap(EnterGroup* other);

  // implements Message ----------------------------------------------

  inline EnterGroup* New() const { return New(NULL); }

  EnterGroup* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterGroup& from);
  void MergeFrom(const EnterGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnterGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 groupId = 1;
  void clear_groupid();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // optional uint64 playerId = 2;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // optional uint32 canSpeak = 3;
  void clear_canspeak();
  static const int kCanSpeakFieldNumber = 3;
  ::google::protobuf::uint32 canspeak() const;
  void set_canspeak(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:message.EnterGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 canspeak_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static EnterGroup* default_instance_;
};
// -------------------------------------------------------------------

class EnterGroupAck : public ::google::protobuf::Message {
 public:
  EnterGroupAck();
  virtual ~EnterGroupAck();

  EnterGroupAck(const EnterGroupAck& from);

  inline EnterGroupAck& operator=(const EnterGroupAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterGroupAck& default_instance();

  void Swap(EnterGroupAck* other);

  // implements Message ----------------------------------------------

  inline EnterGroupAck* New() const { return New(NULL); }

  EnterGroupAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterGroupAck& from);
  void MergeFrom(const EnterGroupAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnterGroupAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 groupId = 1;
  void clear_groupid();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // optional uint64 playerId = 2;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // optional uint32 playerIndex = 3;
  void clear_playerindex();
  static const int kPlayerIndexFieldNumber = 3;
  ::google::protobuf::uint32 playerindex() const;
  void set_playerindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:message.EnterGroupAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 playerindex_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static EnterGroupAck* default_instance_;
};
// -------------------------------------------------------------------

class NotifyEnterGroup : public ::google::protobuf::Message {
 public:
  NotifyEnterGroup();
  virtual ~NotifyEnterGroup();

  NotifyEnterGroup(const NotifyEnterGroup& from);

  inline NotifyEnterGroup& operator=(const NotifyEnterGroup& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyEnterGroup& default_instance();

  void Swap(NotifyEnterGroup* other);

  // implements Message ----------------------------------------------

  inline NotifyEnterGroup* New() const { return New(NULL); }

  NotifyEnterGroup* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyEnterGroup& from);
  void MergeFrom(const NotifyEnterGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NotifyEnterGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 groupId = 1;
  void clear_groupid();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // optional uint64 playerId = 2;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // optional uint32 canSpeak = 3;
  void clear_canspeak();
  static const int kCanSpeakFieldNumber = 3;
  ::google::protobuf::uint32 canspeak() const;
  void set_canspeak(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:message.NotifyEnterGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 canspeak_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static NotifyEnterGroup* default_instance_;
};
// -------------------------------------------------------------------

class NotifyLeaveGroup : public ::google::protobuf::Message {
 public:
  NotifyLeaveGroup();
  virtual ~NotifyLeaveGroup();

  NotifyLeaveGroup(const NotifyLeaveGroup& from);

  inline NotifyLeaveGroup& operator=(const NotifyLeaveGroup& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyLeaveGroup& default_instance();

  void Swap(NotifyLeaveGroup* other);

  // implements Message ----------------------------------------------

  inline NotifyLeaveGroup* New() const { return New(NULL); }

  NotifyLeaveGroup* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyLeaveGroup& from);
  void MergeFrom(const NotifyLeaveGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NotifyLeaveGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 groupId = 1;
  void clear_groupid();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // optional uint64 playerId = 2;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:message.NotifyLeaveGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint64 playerid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static NotifyLeaveGroup* default_instance_;
};
// -------------------------------------------------------------------

class LeaveGroup : public ::google::protobuf::Message {
 public:
  LeaveGroup();
  virtual ~LeaveGroup();

  LeaveGroup(const LeaveGroup& from);

  inline LeaveGroup& operator=(const LeaveGroup& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveGroup& default_instance();

  void Swap(LeaveGroup* other);

  // implements Message ----------------------------------------------

  inline LeaveGroup* New() const { return New(NULL); }

  LeaveGroup* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaveGroup& from);
  void MergeFrom(const LeaveGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LeaveGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 groupId = 1;
  void clear_groupid();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // optional uint64 playerId = 2;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:message.LeaveGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint64 playerid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static LeaveGroup* default_instance_;
};
// -------------------------------------------------------------------

class AdjustPlayerAttr : public ::google::protobuf::Message {
 public:
  AdjustPlayerAttr();
  virtual ~AdjustPlayerAttr();

  AdjustPlayerAttr(const AdjustPlayerAttr& from);

  inline AdjustPlayerAttr& operator=(const AdjustPlayerAttr& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdjustPlayerAttr& default_instance();

  void Swap(AdjustPlayerAttr* other);

  // implements Message ----------------------------------------------

  inline AdjustPlayerAttr* New() const { return New(NULL); }

  AdjustPlayerAttr* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdjustPlayerAttr& from);
  void MergeFrom(const AdjustPlayerAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AdjustPlayerAttr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 groupId = 1;
  void clear_groupid();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // optional uint64 playerId = 2;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // optional uint32 canSpeak = 3;
  void clear_canspeak();
  static const int kCanSpeakFieldNumber = 3;
  ::google::protobuf::uint32 canspeak() const;
  void set_canspeak(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:message.AdjustPlayerAttr)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 canspeak_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static AdjustPlayerAttr* default_instance_;
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  inline Request* New() const { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .message.Handshake handshake = 1;
  bool has_handshake() const;
  void clear_handshake();
  static const int kHandshakeFieldNumber = 1;
  const ::message::Handshake& handshake() const;
  ::message::Handshake* mutable_handshake();
  ::message::Handshake* release_handshake();
  void set_allocated_handshake(::message::Handshake* handshake);

  // optional .message.EnterGroup enterGroup = 2;
  bool has_entergroup() const;
  void clear_entergroup();
  static const int kEnterGroupFieldNumber = 2;
  const ::message::EnterGroup& entergroup() const;
  ::message::EnterGroup* mutable_entergroup();
  ::message::EnterGroup* release_entergroup();
  void set_allocated_entergroup(::message::EnterGroup* entergroup);

  // optional .message.LeaveGroup leaveGroup = 3;
  bool has_leavegroup() const;
  void clear_leavegroup();
  static const int kLeaveGroupFieldNumber = 3;
  const ::message::LeaveGroup& leavegroup() const;
  ::message::LeaveGroup* mutable_leavegroup();
  ::message::LeaveGroup* release_leavegroup();
  void set_allocated_leavegroup(::message::LeaveGroup* leavegroup);

  // optional .message.AdjustPlayerAttr adjustPlayerAttr = 4;
  bool has_adjustplayerattr() const;
  void clear_adjustplayerattr();
  static const int kAdjustPlayerAttrFieldNumber = 4;
  const ::message::AdjustPlayerAttr& adjustplayerattr() const;
  ::message::AdjustPlayerAttr* mutable_adjustplayerattr();
  ::message::AdjustPlayerAttr* release_adjustplayerattr();
  void set_allocated_adjustplayerattr(::message::AdjustPlayerAttr* adjustplayerattr);

  // @@protoc_insertion_point(class_scope:message.Request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::message::Handshake* handshake_;
  ::message::EnterGroup* entergroup_;
  ::message::LeaveGroup* leavegroup_;
  ::message::AdjustPlayerAttr* adjustplayerattr_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static Request* default_instance_;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  inline Response* New() const { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .message.ACK Code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::message::ACK code() const;
  void set_code(::message::ACK value);

  // optional .message.HandshakeAck handshakeAck = 3;
  bool has_handshakeack() const;
  void clear_handshakeack();
  static const int kHandshakeAckFieldNumber = 3;
  const ::message::HandshakeAck& handshakeack() const;
  ::message::HandshakeAck* mutable_handshakeack();
  ::message::HandshakeAck* release_handshakeack();
  void set_allocated_handshakeack(::message::HandshakeAck* handshakeack);

  // optional .message.EnterGroupAck enterGroupAck = 4;
  bool has_entergroupack() const;
  void clear_entergroupack();
  static const int kEnterGroupAckFieldNumber = 4;
  const ::message::EnterGroupAck& entergroupack() const;
  ::message::EnterGroupAck* mutable_entergroupack();
  ::message::EnterGroupAck* release_entergroupack();
  void set_allocated_entergroupack(::message::EnterGroupAck* entergroupack);

  // @@protoc_insertion_point(class_scope:message.Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::message::HandshakeAck* handshakeack_;
  ::message::EnterGroupAck* entergroupack_;
  int code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static Response* default_instance_;
};
// -------------------------------------------------------------------

class Noitfy : public ::google::protobuf::Message {
 public:
  Noitfy();
  virtual ~Noitfy();

  Noitfy(const Noitfy& from);

  inline Noitfy& operator=(const Noitfy& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Noitfy& default_instance();

  void Swap(Noitfy* other);

  // implements Message ----------------------------------------------

  inline Noitfy* New() const { return New(NULL); }

  Noitfy* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Noitfy& from);
  void MergeFrom(const Noitfy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Noitfy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .message.NotifyEnterGroup notifyEnterGroup = 1;
  bool has_notifyentergroup() const;
  void clear_notifyentergroup();
  static const int kNotifyEnterGroupFieldNumber = 1;
  const ::message::NotifyEnterGroup& notifyentergroup() const;
  ::message::NotifyEnterGroup* mutable_notifyentergroup();
  ::message::NotifyEnterGroup* release_notifyentergroup();
  void set_allocated_notifyentergroup(::message::NotifyEnterGroup* notifyentergroup);

  // optional .message.NotifyLeaveGroup notifyLeaveGroup = 2;
  bool has_notifyleavegroup() const;
  void clear_notifyleavegroup();
  static const int kNotifyLeaveGroupFieldNumber = 2;
  const ::message::NotifyLeaveGroup& notifyleavegroup() const;
  ::message::NotifyLeaveGroup* mutable_notifyleavegroup();
  ::message::NotifyLeaveGroup* release_notifyleavegroup();
  void set_allocated_notifyleavegroup(::message::NotifyLeaveGroup* notifyleavegroup);

  // @@protoc_insertion_point(class_scope:message.Noitfy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::message::NotifyEnterGroup* notifyentergroup_;
  ::message::NotifyLeaveGroup* notifyleavegroup_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static Noitfy* default_instance_;
};
// -------------------------------------------------------------------

class ControlMessage : public ::google::protobuf::Message {
 public:
  ControlMessage();
  virtual ~ControlMessage();

  ControlMessage(const ControlMessage& from);

  inline ControlMessage& operator=(const ControlMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ControlMessage& default_instance();

  void Swap(ControlMessage* other);

  // implements Message ----------------------------------------------

  inline ControlMessage* New() const { return New(NULL); }

  ControlMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ControlMessage& from);
  void MergeFrom(const ControlMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ControlMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .message.Request req = 1;
  bool has_req() const;
  void clear_req();
  static const int kReqFieldNumber = 1;
  const ::message::Request& req() const;
  ::message::Request* mutable_req();
  ::message::Request* release_req();
  void set_allocated_req(::message::Request* req);

  // optional .message.Response res = 2;
  bool has_res() const;
  void clear_res();
  static const int kResFieldNumber = 2;
  const ::message::Response& res() const;
  ::message::Response* mutable_res();
  ::message::Response* release_res();
  void set_allocated_res(::message::Response* res);

  // optional .message.Noitfy notify = 3;
  bool has_notify() const;
  void clear_notify();
  static const int kNotifyFieldNumber = 3;
  const ::message::Noitfy& notify() const;
  ::message::Noitfy* mutable_notify();
  ::message::Noitfy* release_notify();
  void set_allocated_notify(::message::Noitfy* notify);

  // @@protoc_insertion_point(class_scope:message.ControlMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::message::Request* req_;
  ::message::Response* res_;
  ::message::Noitfy* notify_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static ControlMessage* default_instance_;
};
// -------------------------------------------------------------------

class PlayerRequestConnect : public ::google::protobuf::Message {
 public:
  PlayerRequestConnect();
  virtual ~PlayerRequestConnect();

  PlayerRequestConnect(const PlayerRequestConnect& from);

  inline PlayerRequestConnect& operator=(const PlayerRequestConnect& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerRequestConnect& default_instance();

  void Swap(PlayerRequestConnect* other);

  // implements Message ----------------------------------------------

  inline PlayerRequestConnect* New() const { return New(NULL); }

  PlayerRequestConnect* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerRequestConnect& from);
  void MergeFrom(const PlayerRequestConnect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlayerRequestConnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 PlayerIndex = 1;
  void clear_playerindex();
  static const int kPlayerIndexFieldNumber = 1;
  ::google::protobuf::uint32 playerindex() const;
  void set_playerindex(::google::protobuf::uint32 value);

  // optional uint64 PlayerID = 2;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // optional uint64 GroupID = 3;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 3;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:message.PlayerRequestConnect)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint32 playerindex_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static PlayerRequestConnect* default_instance_;
};
// -------------------------------------------------------------------

class PlayerRequestConnectAck : public ::google::protobuf::Message {
 public:
  PlayerRequestConnectAck();
  virtual ~PlayerRequestConnectAck();

  PlayerRequestConnectAck(const PlayerRequestConnectAck& from);

  inline PlayerRequestConnectAck& operator=(const PlayerRequestConnectAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerRequestConnectAck& default_instance();

  void Swap(PlayerRequestConnectAck* other);

  // implements Message ----------------------------------------------

  inline PlayerRequestConnectAck* New() const { return New(NULL); }

  PlayerRequestConnectAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerRequestConnectAck& from);
  void MergeFrom(const PlayerRequestConnectAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlayerRequestConnectAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .message.VOICE_ACK Code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::message::VOICE_ACK code() const;
  void set_code(::message::VOICE_ACK value);

  // @@protoc_insertion_point(class_scope:message.PlayerRequestConnectAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static PlayerRequestConnectAck* default_instance_;
};
// -------------------------------------------------------------------

class VoiceData : public ::google::protobuf::Message {
 public:
  VoiceData();
  virtual ~VoiceData();

  VoiceData(const VoiceData& from);

  inline VoiceData& operator=(const VoiceData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VoiceData& default_instance();

  void Swap(VoiceData* other);

  // implements Message ----------------------------------------------

  inline VoiceData* New() const { return New(NULL); }

  VoiceData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VoiceData& from);
  void MergeFrom(const VoiceData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VoiceData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 PlayerIndex = 1;
  void clear_playerindex();
  static const int kPlayerIndexFieldNumber = 1;
  ::google::protobuf::uint32 playerindex() const;
  void set_playerindex(::google::protobuf::uint32 value);

  // optional uint64 PlayerID = 2;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // optional uint32 FrameIndex = 3;
  void clear_frameindex();
  static const int kFrameIndexFieldNumber = 3;
  ::google::protobuf::uint32 frameindex() const;
  void set_frameindex(::google::protobuf::uint32 value);

  // optional bytes Data = 4;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:message.VoiceData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 playerindex_;
  ::google::protobuf::uint32 frameindex_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static VoiceData* default_instance_;
};
// -------------------------------------------------------------------

class VoiceHeartbeat : public ::google::protobuf::Message {
 public:
  VoiceHeartbeat();
  virtual ~VoiceHeartbeat();

  VoiceHeartbeat(const VoiceHeartbeat& from);

  inline VoiceHeartbeat& operator=(const VoiceHeartbeat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VoiceHeartbeat& default_instance();

  void Swap(VoiceHeartbeat* other);

  // implements Message ----------------------------------------------

  inline VoiceHeartbeat* New() const { return New(NULL); }

  VoiceHeartbeat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VoiceHeartbeat& from);
  void MergeFrom(const VoiceHeartbeat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VoiceHeartbeat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 PlayerIndex = 1;
  void clear_playerindex();
  static const int kPlayerIndexFieldNumber = 1;
  ::google::protobuf::uint32 playerindex() const;
  void set_playerindex(::google::protobuf::uint32 value);

  // optional uint64 PlayerID = 2;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:message.VoiceHeartbeat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 playerindex_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static VoiceHeartbeat* default_instance_;
};
// -------------------------------------------------------------------

class VoiceMessage : public ::google::protobuf::Message {
 public:
  VoiceMessage();
  virtual ~VoiceMessage();

  VoiceMessage(const VoiceMessage& from);

  inline VoiceMessage& operator=(const VoiceMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VoiceMessage& default_instance();

  void Swap(VoiceMessage* other);

  // implements Message ----------------------------------------------

  inline VoiceMessage* New() const { return New(NULL); }

  VoiceMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VoiceMessage& from);
  void MergeFrom(const VoiceMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VoiceMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .message.PlayerRequestConnect playerRequestConnect = 1;
  bool has_playerrequestconnect() const;
  void clear_playerrequestconnect();
  static const int kPlayerRequestConnectFieldNumber = 1;
  const ::message::PlayerRequestConnect& playerrequestconnect() const;
  ::message::PlayerRequestConnect* mutable_playerrequestconnect();
  ::message::PlayerRequestConnect* release_playerrequestconnect();
  void set_allocated_playerrequestconnect(::message::PlayerRequestConnect* playerrequestconnect);

  // optional .message.PlayerRequestConnectAck playerRequestConnectAck = 2;
  bool has_playerrequestconnectack() const;
  void clear_playerrequestconnectack();
  static const int kPlayerRequestConnectAckFieldNumber = 2;
  const ::message::PlayerRequestConnectAck& playerrequestconnectack() const;
  ::message::PlayerRequestConnectAck* mutable_playerrequestconnectack();
  ::message::PlayerRequestConnectAck* release_playerrequestconnectack();
  void set_allocated_playerrequestconnectack(::message::PlayerRequestConnectAck* playerrequestconnectack);

  // optional .message.VoiceData voiceData = 3;
  bool has_voicedata() const;
  void clear_voicedata();
  static const int kVoiceDataFieldNumber = 3;
  const ::message::VoiceData& voicedata() const;
  ::message::VoiceData* mutable_voicedata();
  ::message::VoiceData* release_voicedata();
  void set_allocated_voicedata(::message::VoiceData* voicedata);

  // optional .message.VoiceHeartbeat voiceHeartbeat = 4;
  bool has_voiceheartbeat() const;
  void clear_voiceheartbeat();
  static const int kVoiceHeartbeatFieldNumber = 4;
  const ::message::VoiceHeartbeat& voiceheartbeat() const;
  ::message::VoiceHeartbeat* mutable_voiceheartbeat();
  ::message::VoiceHeartbeat* release_voiceheartbeat();
  void set_allocated_voiceheartbeat(::message::VoiceHeartbeat* voiceheartbeat);

  // @@protoc_insertion_point(class_scope:message.VoiceMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::message::PlayerRequestConnect* playerrequestconnect_;
  ::message::PlayerRequestConnectAck* playerrequestconnectack_;
  ::message::VoiceData* voicedata_;
  ::message::VoiceHeartbeat* voiceheartbeat_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static VoiceMessage* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Handshake

// optional string ProductKey = 2;
inline void Handshake::clear_productkey() {
  productkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Handshake::productkey() const {
  // @@protoc_insertion_point(field_get:message.Handshake.ProductKey)
  return productkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Handshake::set_productkey(const ::std::string& value) {
  
  productkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.Handshake.ProductKey)
}
inline void Handshake::set_productkey(const char* value) {
  
  productkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.Handshake.ProductKey)
}
inline void Handshake::set_productkey(const char* value, size_t size) {
  
  productkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.Handshake.ProductKey)
}
inline ::std::string* Handshake::mutable_productkey() {
  
  // @@protoc_insertion_point(field_mutable:message.Handshake.ProductKey)
  return productkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Handshake::release_productkey() {
  
  return productkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Handshake::set_allocated_productkey(::std::string* productkey) {
  if (productkey != NULL) {
    
  } else {
    
  }
  productkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productkey);
  // @@protoc_insertion_point(field_set_allocated:message.Handshake.ProductKey)
}

// -------------------------------------------------------------------

// HandshakeAck

// -------------------------------------------------------------------

// EnterGroup

// optional uint64 groupId = 1;
inline void EnterGroup::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 EnterGroup::groupid() const {
  // @@protoc_insertion_point(field_get:message.EnterGroup.groupId)
  return groupid_;
}
inline void EnterGroup::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:message.EnterGroup.groupId)
}

// optional uint64 playerId = 2;
inline void EnterGroup::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 EnterGroup::playerid() const {
  // @@protoc_insertion_point(field_get:message.EnterGroup.playerId)
  return playerid_;
}
inline void EnterGroup::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:message.EnterGroup.playerId)
}

// optional uint32 canSpeak = 3;
inline void EnterGroup::clear_canspeak() {
  canspeak_ = 0u;
}
inline ::google::protobuf::uint32 EnterGroup::canspeak() const {
  // @@protoc_insertion_point(field_get:message.EnterGroup.canSpeak)
  return canspeak_;
}
inline void EnterGroup::set_canspeak(::google::protobuf::uint32 value) {
  
  canspeak_ = value;
  // @@protoc_insertion_point(field_set:message.EnterGroup.canSpeak)
}

// -------------------------------------------------------------------

// EnterGroupAck

// optional uint64 groupId = 1;
inline void EnterGroupAck::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 EnterGroupAck::groupid() const {
  // @@protoc_insertion_point(field_get:message.EnterGroupAck.groupId)
  return groupid_;
}
inline void EnterGroupAck::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:message.EnterGroupAck.groupId)
}

// optional uint64 playerId = 2;
inline void EnterGroupAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 EnterGroupAck::playerid() const {
  // @@protoc_insertion_point(field_get:message.EnterGroupAck.playerId)
  return playerid_;
}
inline void EnterGroupAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:message.EnterGroupAck.playerId)
}

// optional uint32 playerIndex = 3;
inline void EnterGroupAck::clear_playerindex() {
  playerindex_ = 0u;
}
inline ::google::protobuf::uint32 EnterGroupAck::playerindex() const {
  // @@protoc_insertion_point(field_get:message.EnterGroupAck.playerIndex)
  return playerindex_;
}
inline void EnterGroupAck::set_playerindex(::google::protobuf::uint32 value) {
  
  playerindex_ = value;
  // @@protoc_insertion_point(field_set:message.EnterGroupAck.playerIndex)
}

// -------------------------------------------------------------------

// NotifyEnterGroup

// optional uint64 groupId = 1;
inline void NotifyEnterGroup::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 NotifyEnterGroup::groupid() const {
  // @@protoc_insertion_point(field_get:message.NotifyEnterGroup.groupId)
  return groupid_;
}
inline void NotifyEnterGroup::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:message.NotifyEnterGroup.groupId)
}

// optional uint64 playerId = 2;
inline void NotifyEnterGroup::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 NotifyEnterGroup::playerid() const {
  // @@protoc_insertion_point(field_get:message.NotifyEnterGroup.playerId)
  return playerid_;
}
inline void NotifyEnterGroup::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:message.NotifyEnterGroup.playerId)
}

// optional uint32 canSpeak = 3;
inline void NotifyEnterGroup::clear_canspeak() {
  canspeak_ = 0u;
}
inline ::google::protobuf::uint32 NotifyEnterGroup::canspeak() const {
  // @@protoc_insertion_point(field_get:message.NotifyEnterGroup.canSpeak)
  return canspeak_;
}
inline void NotifyEnterGroup::set_canspeak(::google::protobuf::uint32 value) {
  
  canspeak_ = value;
  // @@protoc_insertion_point(field_set:message.NotifyEnterGroup.canSpeak)
}

// -------------------------------------------------------------------

// NotifyLeaveGroup

// optional uint64 groupId = 1;
inline void NotifyLeaveGroup::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 NotifyLeaveGroup::groupid() const {
  // @@protoc_insertion_point(field_get:message.NotifyLeaveGroup.groupId)
  return groupid_;
}
inline void NotifyLeaveGroup::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:message.NotifyLeaveGroup.groupId)
}

// optional uint64 playerId = 2;
inline void NotifyLeaveGroup::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 NotifyLeaveGroup::playerid() const {
  // @@protoc_insertion_point(field_get:message.NotifyLeaveGroup.playerId)
  return playerid_;
}
inline void NotifyLeaveGroup::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:message.NotifyLeaveGroup.playerId)
}

// -------------------------------------------------------------------

// LeaveGroup

// optional uint64 groupId = 1;
inline void LeaveGroup::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LeaveGroup::groupid() const {
  // @@protoc_insertion_point(field_get:message.LeaveGroup.groupId)
  return groupid_;
}
inline void LeaveGroup::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:message.LeaveGroup.groupId)
}

// optional uint64 playerId = 2;
inline void LeaveGroup::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LeaveGroup::playerid() const {
  // @@protoc_insertion_point(field_get:message.LeaveGroup.playerId)
  return playerid_;
}
inline void LeaveGroup::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:message.LeaveGroup.playerId)
}

// -------------------------------------------------------------------

// AdjustPlayerAttr

// optional uint64 groupId = 1;
inline void AdjustPlayerAttr::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AdjustPlayerAttr::groupid() const {
  // @@protoc_insertion_point(field_get:message.AdjustPlayerAttr.groupId)
  return groupid_;
}
inline void AdjustPlayerAttr::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:message.AdjustPlayerAttr.groupId)
}

// optional uint64 playerId = 2;
inline void AdjustPlayerAttr::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AdjustPlayerAttr::playerid() const {
  // @@protoc_insertion_point(field_get:message.AdjustPlayerAttr.playerId)
  return playerid_;
}
inline void AdjustPlayerAttr::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:message.AdjustPlayerAttr.playerId)
}

// optional uint32 canSpeak = 3;
inline void AdjustPlayerAttr::clear_canspeak() {
  canspeak_ = 0u;
}
inline ::google::protobuf::uint32 AdjustPlayerAttr::canspeak() const {
  // @@protoc_insertion_point(field_get:message.AdjustPlayerAttr.canSpeak)
  return canspeak_;
}
inline void AdjustPlayerAttr::set_canspeak(::google::protobuf::uint32 value) {
  
  canspeak_ = value;
  // @@protoc_insertion_point(field_set:message.AdjustPlayerAttr.canSpeak)
}

// -------------------------------------------------------------------

// Request

// optional .message.Handshake handshake = 1;
inline bool Request::has_handshake() const {
  return !_is_default_instance_ && handshake_ != NULL;
}
inline void Request::clear_handshake() {
  if (GetArenaNoVirtual() == NULL && handshake_ != NULL) delete handshake_;
  handshake_ = NULL;
}
inline const ::message::Handshake& Request::handshake() const {
  // @@protoc_insertion_point(field_get:message.Request.handshake)
  return handshake_ != NULL ? *handshake_ : *default_instance_->handshake_;
}
inline ::message::Handshake* Request::mutable_handshake() {
  
  if (handshake_ == NULL) {
    handshake_ = new ::message::Handshake;
  }
  // @@protoc_insertion_point(field_mutable:message.Request.handshake)
  return handshake_;
}
inline ::message::Handshake* Request::release_handshake() {
  
  ::message::Handshake* temp = handshake_;
  handshake_ = NULL;
  return temp;
}
inline void Request::set_allocated_handshake(::message::Handshake* handshake) {
  delete handshake_;
  handshake_ = handshake;
  if (handshake) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message.Request.handshake)
}

// optional .message.EnterGroup enterGroup = 2;
inline bool Request::has_entergroup() const {
  return !_is_default_instance_ && entergroup_ != NULL;
}
inline void Request::clear_entergroup() {
  if (GetArenaNoVirtual() == NULL && entergroup_ != NULL) delete entergroup_;
  entergroup_ = NULL;
}
inline const ::message::EnterGroup& Request::entergroup() const {
  // @@protoc_insertion_point(field_get:message.Request.enterGroup)
  return entergroup_ != NULL ? *entergroup_ : *default_instance_->entergroup_;
}
inline ::message::EnterGroup* Request::mutable_entergroup() {
  
  if (entergroup_ == NULL) {
    entergroup_ = new ::message::EnterGroup;
  }
  // @@protoc_insertion_point(field_mutable:message.Request.enterGroup)
  return entergroup_;
}
inline ::message::EnterGroup* Request::release_entergroup() {
  
  ::message::EnterGroup* temp = entergroup_;
  entergroup_ = NULL;
  return temp;
}
inline void Request::set_allocated_entergroup(::message::EnterGroup* entergroup) {
  delete entergroup_;
  entergroup_ = entergroup;
  if (entergroup) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message.Request.enterGroup)
}

// optional .message.LeaveGroup leaveGroup = 3;
inline bool Request::has_leavegroup() const {
  return !_is_default_instance_ && leavegroup_ != NULL;
}
inline void Request::clear_leavegroup() {
  if (GetArenaNoVirtual() == NULL && leavegroup_ != NULL) delete leavegroup_;
  leavegroup_ = NULL;
}
inline const ::message::LeaveGroup& Request::leavegroup() const {
  // @@protoc_insertion_point(field_get:message.Request.leaveGroup)
  return leavegroup_ != NULL ? *leavegroup_ : *default_instance_->leavegroup_;
}
inline ::message::LeaveGroup* Request::mutable_leavegroup() {
  
  if (leavegroup_ == NULL) {
    leavegroup_ = new ::message::LeaveGroup;
  }
  // @@protoc_insertion_point(field_mutable:message.Request.leaveGroup)
  return leavegroup_;
}
inline ::message::LeaveGroup* Request::release_leavegroup() {
  
  ::message::LeaveGroup* temp = leavegroup_;
  leavegroup_ = NULL;
  return temp;
}
inline void Request::set_allocated_leavegroup(::message::LeaveGroup* leavegroup) {
  delete leavegroup_;
  leavegroup_ = leavegroup;
  if (leavegroup) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message.Request.leaveGroup)
}

// optional .message.AdjustPlayerAttr adjustPlayerAttr = 4;
inline bool Request::has_adjustplayerattr() const {
  return !_is_default_instance_ && adjustplayerattr_ != NULL;
}
inline void Request::clear_adjustplayerattr() {
  if (GetArenaNoVirtual() == NULL && adjustplayerattr_ != NULL) delete adjustplayerattr_;
  adjustplayerattr_ = NULL;
}
inline const ::message::AdjustPlayerAttr& Request::adjustplayerattr() const {
  // @@protoc_insertion_point(field_get:message.Request.adjustPlayerAttr)
  return adjustplayerattr_ != NULL ? *adjustplayerattr_ : *default_instance_->adjustplayerattr_;
}
inline ::message::AdjustPlayerAttr* Request::mutable_adjustplayerattr() {
  
  if (adjustplayerattr_ == NULL) {
    adjustplayerattr_ = new ::message::AdjustPlayerAttr;
  }
  // @@protoc_insertion_point(field_mutable:message.Request.adjustPlayerAttr)
  return adjustplayerattr_;
}
inline ::message::AdjustPlayerAttr* Request::release_adjustplayerattr() {
  
  ::message::AdjustPlayerAttr* temp = adjustplayerattr_;
  adjustplayerattr_ = NULL;
  return temp;
}
inline void Request::set_allocated_adjustplayerattr(::message::AdjustPlayerAttr* adjustplayerattr) {
  delete adjustplayerattr_;
  adjustplayerattr_ = adjustplayerattr;
  if (adjustplayerattr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message.Request.adjustPlayerAttr)
}

// -------------------------------------------------------------------

// Response

// optional .message.ACK Code = 1;
inline void Response::clear_code() {
  code_ = 0;
}
inline ::message::ACK Response::code() const {
  // @@protoc_insertion_point(field_get:message.Response.Code)
  return static_cast< ::message::ACK >(code_);
}
inline void Response::set_code(::message::ACK value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:message.Response.Code)
}

// optional .message.HandshakeAck handshakeAck = 3;
inline bool Response::has_handshakeack() const {
  return !_is_default_instance_ && handshakeack_ != NULL;
}
inline void Response::clear_handshakeack() {
  if (GetArenaNoVirtual() == NULL && handshakeack_ != NULL) delete handshakeack_;
  handshakeack_ = NULL;
}
inline const ::message::HandshakeAck& Response::handshakeack() const {
  // @@protoc_insertion_point(field_get:message.Response.handshakeAck)
  return handshakeack_ != NULL ? *handshakeack_ : *default_instance_->handshakeack_;
}
inline ::message::HandshakeAck* Response::mutable_handshakeack() {
  
  if (handshakeack_ == NULL) {
    handshakeack_ = new ::message::HandshakeAck;
  }
  // @@protoc_insertion_point(field_mutable:message.Response.handshakeAck)
  return handshakeack_;
}
inline ::message::HandshakeAck* Response::release_handshakeack() {
  
  ::message::HandshakeAck* temp = handshakeack_;
  handshakeack_ = NULL;
  return temp;
}
inline void Response::set_allocated_handshakeack(::message::HandshakeAck* handshakeack) {
  delete handshakeack_;
  handshakeack_ = handshakeack;
  if (handshakeack) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message.Response.handshakeAck)
}

// optional .message.EnterGroupAck enterGroupAck = 4;
inline bool Response::has_entergroupack() const {
  return !_is_default_instance_ && entergroupack_ != NULL;
}
inline void Response::clear_entergroupack() {
  if (GetArenaNoVirtual() == NULL && entergroupack_ != NULL) delete entergroupack_;
  entergroupack_ = NULL;
}
inline const ::message::EnterGroupAck& Response::entergroupack() const {
  // @@protoc_insertion_point(field_get:message.Response.enterGroupAck)
  return entergroupack_ != NULL ? *entergroupack_ : *default_instance_->entergroupack_;
}
inline ::message::EnterGroupAck* Response::mutable_entergroupack() {
  
  if (entergroupack_ == NULL) {
    entergroupack_ = new ::message::EnterGroupAck;
  }
  // @@protoc_insertion_point(field_mutable:message.Response.enterGroupAck)
  return entergroupack_;
}
inline ::message::EnterGroupAck* Response::release_entergroupack() {
  
  ::message::EnterGroupAck* temp = entergroupack_;
  entergroupack_ = NULL;
  return temp;
}
inline void Response::set_allocated_entergroupack(::message::EnterGroupAck* entergroupack) {
  delete entergroupack_;
  entergroupack_ = entergroupack;
  if (entergroupack) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message.Response.enterGroupAck)
}

// -------------------------------------------------------------------

// Noitfy

// optional .message.NotifyEnterGroup notifyEnterGroup = 1;
inline bool Noitfy::has_notifyentergroup() const {
  return !_is_default_instance_ && notifyentergroup_ != NULL;
}
inline void Noitfy::clear_notifyentergroup() {
  if (GetArenaNoVirtual() == NULL && notifyentergroup_ != NULL) delete notifyentergroup_;
  notifyentergroup_ = NULL;
}
inline const ::message::NotifyEnterGroup& Noitfy::notifyentergroup() const {
  // @@protoc_insertion_point(field_get:message.Noitfy.notifyEnterGroup)
  return notifyentergroup_ != NULL ? *notifyentergroup_ : *default_instance_->notifyentergroup_;
}
inline ::message::NotifyEnterGroup* Noitfy::mutable_notifyentergroup() {
  
  if (notifyentergroup_ == NULL) {
    notifyentergroup_ = new ::message::NotifyEnterGroup;
  }
  // @@protoc_insertion_point(field_mutable:message.Noitfy.notifyEnterGroup)
  return notifyentergroup_;
}
inline ::message::NotifyEnterGroup* Noitfy::release_notifyentergroup() {
  
  ::message::NotifyEnterGroup* temp = notifyentergroup_;
  notifyentergroup_ = NULL;
  return temp;
}
inline void Noitfy::set_allocated_notifyentergroup(::message::NotifyEnterGroup* notifyentergroup) {
  delete notifyentergroup_;
  notifyentergroup_ = notifyentergroup;
  if (notifyentergroup) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message.Noitfy.notifyEnterGroup)
}

// optional .message.NotifyLeaveGroup notifyLeaveGroup = 2;
inline bool Noitfy::has_notifyleavegroup() const {
  return !_is_default_instance_ && notifyleavegroup_ != NULL;
}
inline void Noitfy::clear_notifyleavegroup() {
  if (GetArenaNoVirtual() == NULL && notifyleavegroup_ != NULL) delete notifyleavegroup_;
  notifyleavegroup_ = NULL;
}
inline const ::message::NotifyLeaveGroup& Noitfy::notifyleavegroup() const {
  // @@protoc_insertion_point(field_get:message.Noitfy.notifyLeaveGroup)
  return notifyleavegroup_ != NULL ? *notifyleavegroup_ : *default_instance_->notifyleavegroup_;
}
inline ::message::NotifyLeaveGroup* Noitfy::mutable_notifyleavegroup() {
  
  if (notifyleavegroup_ == NULL) {
    notifyleavegroup_ = new ::message::NotifyLeaveGroup;
  }
  // @@protoc_insertion_point(field_mutable:message.Noitfy.notifyLeaveGroup)
  return notifyleavegroup_;
}
inline ::message::NotifyLeaveGroup* Noitfy::release_notifyleavegroup() {
  
  ::message::NotifyLeaveGroup* temp = notifyleavegroup_;
  notifyleavegroup_ = NULL;
  return temp;
}
inline void Noitfy::set_allocated_notifyleavegroup(::message::NotifyLeaveGroup* notifyleavegroup) {
  delete notifyleavegroup_;
  notifyleavegroup_ = notifyleavegroup;
  if (notifyleavegroup) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message.Noitfy.notifyLeaveGroup)
}

// -------------------------------------------------------------------

// ControlMessage

// optional .message.Request req = 1;
inline bool ControlMessage::has_req() const {
  return !_is_default_instance_ && req_ != NULL;
}
inline void ControlMessage::clear_req() {
  if (GetArenaNoVirtual() == NULL && req_ != NULL) delete req_;
  req_ = NULL;
}
inline const ::message::Request& ControlMessage::req() const {
  // @@protoc_insertion_point(field_get:message.ControlMessage.req)
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
inline ::message::Request* ControlMessage::mutable_req() {
  
  if (req_ == NULL) {
    req_ = new ::message::Request;
  }
  // @@protoc_insertion_point(field_mutable:message.ControlMessage.req)
  return req_;
}
inline ::message::Request* ControlMessage::release_req() {
  
  ::message::Request* temp = req_;
  req_ = NULL;
  return temp;
}
inline void ControlMessage::set_allocated_req(::message::Request* req) {
  delete req_;
  req_ = req;
  if (req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message.ControlMessage.req)
}

// optional .message.Response res = 2;
inline bool ControlMessage::has_res() const {
  return !_is_default_instance_ && res_ != NULL;
}
inline void ControlMessage::clear_res() {
  if (GetArenaNoVirtual() == NULL && res_ != NULL) delete res_;
  res_ = NULL;
}
inline const ::message::Response& ControlMessage::res() const {
  // @@protoc_insertion_point(field_get:message.ControlMessage.res)
  return res_ != NULL ? *res_ : *default_instance_->res_;
}
inline ::message::Response* ControlMessage::mutable_res() {
  
  if (res_ == NULL) {
    res_ = new ::message::Response;
  }
  // @@protoc_insertion_point(field_mutable:message.ControlMessage.res)
  return res_;
}
inline ::message::Response* ControlMessage::release_res() {
  
  ::message::Response* temp = res_;
  res_ = NULL;
  return temp;
}
inline void ControlMessage::set_allocated_res(::message::Response* res) {
  delete res_;
  res_ = res;
  if (res) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message.ControlMessage.res)
}

// optional .message.Noitfy notify = 3;
inline bool ControlMessage::has_notify() const {
  return !_is_default_instance_ && notify_ != NULL;
}
inline void ControlMessage::clear_notify() {
  if (GetArenaNoVirtual() == NULL && notify_ != NULL) delete notify_;
  notify_ = NULL;
}
inline const ::message::Noitfy& ControlMessage::notify() const {
  // @@protoc_insertion_point(field_get:message.ControlMessage.notify)
  return notify_ != NULL ? *notify_ : *default_instance_->notify_;
}
inline ::message::Noitfy* ControlMessage::mutable_notify() {
  
  if (notify_ == NULL) {
    notify_ = new ::message::Noitfy;
  }
  // @@protoc_insertion_point(field_mutable:message.ControlMessage.notify)
  return notify_;
}
inline ::message::Noitfy* ControlMessage::release_notify() {
  
  ::message::Noitfy* temp = notify_;
  notify_ = NULL;
  return temp;
}
inline void ControlMessage::set_allocated_notify(::message::Noitfy* notify) {
  delete notify_;
  notify_ = notify;
  if (notify) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message.ControlMessage.notify)
}

// -------------------------------------------------------------------

// PlayerRequestConnect

// optional uint32 PlayerIndex = 1;
inline void PlayerRequestConnect::clear_playerindex() {
  playerindex_ = 0u;
}
inline ::google::protobuf::uint32 PlayerRequestConnect::playerindex() const {
  // @@protoc_insertion_point(field_get:message.PlayerRequestConnect.PlayerIndex)
  return playerindex_;
}
inline void PlayerRequestConnect::set_playerindex(::google::protobuf::uint32 value) {
  
  playerindex_ = value;
  // @@protoc_insertion_point(field_set:message.PlayerRequestConnect.PlayerIndex)
}

// optional uint64 PlayerID = 2;
inline void PlayerRequestConnect::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PlayerRequestConnect::playerid() const {
  // @@protoc_insertion_point(field_get:message.PlayerRequestConnect.PlayerID)
  return playerid_;
}
inline void PlayerRequestConnect::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:message.PlayerRequestConnect.PlayerID)
}

// optional uint64 GroupID = 3;
inline void PlayerRequestConnect::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PlayerRequestConnect::groupid() const {
  // @@protoc_insertion_point(field_get:message.PlayerRequestConnect.GroupID)
  return groupid_;
}
inline void PlayerRequestConnect::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:message.PlayerRequestConnect.GroupID)
}

// -------------------------------------------------------------------

// PlayerRequestConnectAck

// optional .message.VOICE_ACK Code = 1;
inline void PlayerRequestConnectAck::clear_code() {
  code_ = 0;
}
inline ::message::VOICE_ACK PlayerRequestConnectAck::code() const {
  // @@protoc_insertion_point(field_get:message.PlayerRequestConnectAck.Code)
  return static_cast< ::message::VOICE_ACK >(code_);
}
inline void PlayerRequestConnectAck::set_code(::message::VOICE_ACK value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:message.PlayerRequestConnectAck.Code)
}

// -------------------------------------------------------------------

// VoiceData

// optional uint32 PlayerIndex = 1;
inline void VoiceData::clear_playerindex() {
  playerindex_ = 0u;
}
inline ::google::protobuf::uint32 VoiceData::playerindex() const {
  // @@protoc_insertion_point(field_get:message.VoiceData.PlayerIndex)
  return playerindex_;
}
inline void VoiceData::set_playerindex(::google::protobuf::uint32 value) {
  
  playerindex_ = value;
  // @@protoc_insertion_point(field_set:message.VoiceData.PlayerIndex)
}

// optional uint64 PlayerID = 2;
inline void VoiceData::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 VoiceData::playerid() const {
  // @@protoc_insertion_point(field_get:message.VoiceData.PlayerID)
  return playerid_;
}
inline void VoiceData::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:message.VoiceData.PlayerID)
}

// optional uint32 FrameIndex = 3;
inline void VoiceData::clear_frameindex() {
  frameindex_ = 0u;
}
inline ::google::protobuf::uint32 VoiceData::frameindex() const {
  // @@protoc_insertion_point(field_get:message.VoiceData.FrameIndex)
  return frameindex_;
}
inline void VoiceData::set_frameindex(::google::protobuf::uint32 value) {
  
  frameindex_ = value;
  // @@protoc_insertion_point(field_set:message.VoiceData.FrameIndex)
}

// optional bytes Data = 4;
inline void VoiceData::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VoiceData::data() const {
  // @@protoc_insertion_point(field_get:message.VoiceData.Data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VoiceData::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.VoiceData.Data)
}
inline void VoiceData::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.VoiceData.Data)
}
inline void VoiceData::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.VoiceData.Data)
}
inline ::std::string* VoiceData::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:message.VoiceData.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VoiceData::release_data() {
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VoiceData::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:message.VoiceData.Data)
}

// -------------------------------------------------------------------

// VoiceHeartbeat

// optional uint32 PlayerIndex = 1;
inline void VoiceHeartbeat::clear_playerindex() {
  playerindex_ = 0u;
}
inline ::google::protobuf::uint32 VoiceHeartbeat::playerindex() const {
  // @@protoc_insertion_point(field_get:message.VoiceHeartbeat.PlayerIndex)
  return playerindex_;
}
inline void VoiceHeartbeat::set_playerindex(::google::protobuf::uint32 value) {
  
  playerindex_ = value;
  // @@protoc_insertion_point(field_set:message.VoiceHeartbeat.PlayerIndex)
}

// optional uint64 PlayerID = 2;
inline void VoiceHeartbeat::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 VoiceHeartbeat::playerid() const {
  // @@protoc_insertion_point(field_get:message.VoiceHeartbeat.PlayerID)
  return playerid_;
}
inline void VoiceHeartbeat::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:message.VoiceHeartbeat.PlayerID)
}

// -------------------------------------------------------------------

// VoiceMessage

// optional .message.PlayerRequestConnect playerRequestConnect = 1;
inline bool VoiceMessage::has_playerrequestconnect() const {
  return !_is_default_instance_ && playerrequestconnect_ != NULL;
}
inline void VoiceMessage::clear_playerrequestconnect() {
  if (GetArenaNoVirtual() == NULL && playerrequestconnect_ != NULL) delete playerrequestconnect_;
  playerrequestconnect_ = NULL;
}
inline const ::message::PlayerRequestConnect& VoiceMessage::playerrequestconnect() const {
  // @@protoc_insertion_point(field_get:message.VoiceMessage.playerRequestConnect)
  return playerrequestconnect_ != NULL ? *playerrequestconnect_ : *default_instance_->playerrequestconnect_;
}
inline ::message::PlayerRequestConnect* VoiceMessage::mutable_playerrequestconnect() {
  
  if (playerrequestconnect_ == NULL) {
    playerrequestconnect_ = new ::message::PlayerRequestConnect;
  }
  // @@protoc_insertion_point(field_mutable:message.VoiceMessage.playerRequestConnect)
  return playerrequestconnect_;
}
inline ::message::PlayerRequestConnect* VoiceMessage::release_playerrequestconnect() {
  
  ::message::PlayerRequestConnect* temp = playerrequestconnect_;
  playerrequestconnect_ = NULL;
  return temp;
}
inline void VoiceMessage::set_allocated_playerrequestconnect(::message::PlayerRequestConnect* playerrequestconnect) {
  delete playerrequestconnect_;
  playerrequestconnect_ = playerrequestconnect;
  if (playerrequestconnect) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message.VoiceMessage.playerRequestConnect)
}

// optional .message.PlayerRequestConnectAck playerRequestConnectAck = 2;
inline bool VoiceMessage::has_playerrequestconnectack() const {
  return !_is_default_instance_ && playerrequestconnectack_ != NULL;
}
inline void VoiceMessage::clear_playerrequestconnectack() {
  if (GetArenaNoVirtual() == NULL && playerrequestconnectack_ != NULL) delete playerrequestconnectack_;
  playerrequestconnectack_ = NULL;
}
inline const ::message::PlayerRequestConnectAck& VoiceMessage::playerrequestconnectack() const {
  // @@protoc_insertion_point(field_get:message.VoiceMessage.playerRequestConnectAck)
  return playerrequestconnectack_ != NULL ? *playerrequestconnectack_ : *default_instance_->playerrequestconnectack_;
}
inline ::message::PlayerRequestConnectAck* VoiceMessage::mutable_playerrequestconnectack() {
  
  if (playerrequestconnectack_ == NULL) {
    playerrequestconnectack_ = new ::message::PlayerRequestConnectAck;
  }
  // @@protoc_insertion_point(field_mutable:message.VoiceMessage.playerRequestConnectAck)
  return playerrequestconnectack_;
}
inline ::message::PlayerRequestConnectAck* VoiceMessage::release_playerrequestconnectack() {
  
  ::message::PlayerRequestConnectAck* temp = playerrequestconnectack_;
  playerrequestconnectack_ = NULL;
  return temp;
}
inline void VoiceMessage::set_allocated_playerrequestconnectack(::message::PlayerRequestConnectAck* playerrequestconnectack) {
  delete playerrequestconnectack_;
  playerrequestconnectack_ = playerrequestconnectack;
  if (playerrequestconnectack) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message.VoiceMessage.playerRequestConnectAck)
}

// optional .message.VoiceData voiceData = 3;
inline bool VoiceMessage::has_voicedata() const {
  return !_is_default_instance_ && voicedata_ != NULL;
}
inline void VoiceMessage::clear_voicedata() {
  if (GetArenaNoVirtual() == NULL && voicedata_ != NULL) delete voicedata_;
  voicedata_ = NULL;
}
inline const ::message::VoiceData& VoiceMessage::voicedata() const {
  // @@protoc_insertion_point(field_get:message.VoiceMessage.voiceData)
  return voicedata_ != NULL ? *voicedata_ : *default_instance_->voicedata_;
}
inline ::message::VoiceData* VoiceMessage::mutable_voicedata() {
  
  if (voicedata_ == NULL) {
    voicedata_ = new ::message::VoiceData;
  }
  // @@protoc_insertion_point(field_mutable:message.VoiceMessage.voiceData)
  return voicedata_;
}
inline ::message::VoiceData* VoiceMessage::release_voicedata() {
  
  ::message::VoiceData* temp = voicedata_;
  voicedata_ = NULL;
  return temp;
}
inline void VoiceMessage::set_allocated_voicedata(::message::VoiceData* voicedata) {
  delete voicedata_;
  voicedata_ = voicedata;
  if (voicedata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message.VoiceMessage.voiceData)
}

// optional .message.VoiceHeartbeat voiceHeartbeat = 4;
inline bool VoiceMessage::has_voiceheartbeat() const {
  return !_is_default_instance_ && voiceheartbeat_ != NULL;
}
inline void VoiceMessage::clear_voiceheartbeat() {
  if (GetArenaNoVirtual() == NULL && voiceheartbeat_ != NULL) delete voiceheartbeat_;
  voiceheartbeat_ = NULL;
}
inline const ::message::VoiceHeartbeat& VoiceMessage::voiceheartbeat() const {
  // @@protoc_insertion_point(field_get:message.VoiceMessage.voiceHeartbeat)
  return voiceheartbeat_ != NULL ? *voiceheartbeat_ : *default_instance_->voiceheartbeat_;
}
inline ::message::VoiceHeartbeat* VoiceMessage::mutable_voiceheartbeat() {
  
  if (voiceheartbeat_ == NULL) {
    voiceheartbeat_ = new ::message::VoiceHeartbeat;
  }
  // @@protoc_insertion_point(field_mutable:message.VoiceMessage.voiceHeartbeat)
  return voiceheartbeat_;
}
inline ::message::VoiceHeartbeat* VoiceMessage::release_voiceheartbeat() {
  
  ::message::VoiceHeartbeat* temp = voiceheartbeat_;
  voiceheartbeat_ = NULL;
  return temp;
}
inline void VoiceMessage::set_allocated_voiceheartbeat(::message::VoiceHeartbeat* voiceheartbeat) {
  delete voiceheartbeat_;
  voiceheartbeat_ = voiceheartbeat;
  if (voiceheartbeat) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:message.VoiceMessage.voiceHeartbeat)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::message::MSG_CONST> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::message::MSG_CONST>() {
  return ::message::MSG_CONST_descriptor();
}
template <> struct is_proto_enum< ::message::MSG> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::message::MSG>() {
  return ::message::MSG_descriptor();
}
template <> struct is_proto_enum< ::message::ACK> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::message::ACK>() {
  return ::message::ACK_descriptor();
}
template <> struct is_proto_enum< ::message::VOICE_MSG> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::message::VOICE_MSG>() {
  return ::message::VOICE_MSG_descriptor();
}
template <> struct is_proto_enum< ::message::VOICE_ACK> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::message::VOICE_ACK>() {
  return ::message::VOICE_ACK_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
